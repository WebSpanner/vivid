$max-width: 1280px;
$breakpoints: (
    sm: 576px,      // landscape phones
    md: 768px,      // tablets
    lg: 992px,      // desktops
    xlg: 1200px     // large desktop
);

.columns {
    display: flex;
    width: 100%;
    flex-flow: wrap;
}

@mixin base-column {
    position: relative;
    min-height: 1px;
    padding-left: 15px;
    padding-right: 15px;
}

@mixin column($name, $portion, $size-name: false) {
    $class-name: '';
    @if $size-name {
        $class-name: '#{$name}-#{$size-name}-#{$portion}';
    } @else {
        $class-name: '#{$name}-#{$portion}';
    }

    .#{$class-name} {
        flex-basis: 100% * ($portion/12);
        max-width: 100% * ($portion/12);
        @include base-column;
    }
}

@mixin flex-directions($size: 'default') {

    @each $direction in row, column {
        $name: 'dir-#{$direction}';
        @if $size != 'default' {
            $name: '#{$name}-#{$size}';
        }
        .#{$name} {
            flex-direction: $direction;
        }
    }
}

@mixin grid($breakpoints, $max-width, $column-base-name) {
    .#{$column-base-name} {
        @include base-column;
        flex: 1;
    }

    @include flex-directions();
    @each $size, $breakpoint in $breakpoints {
        @for $i from 1 through 12 {
            @if $size == nth(map_keys($breakpoints), 1) {
                @include column($column-base-name, $i);
            }

            @media screen and (min-width: $breakpoint) {
                @include column($column-base-name, $i, $size);
            }
        }

        @include flex-directions($size);
    }
}

@include grid($breakpoints, $max-width, 'column');